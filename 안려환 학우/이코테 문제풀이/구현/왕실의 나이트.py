import sys

# 체스판의 나이트가 이동하는 것에 대해서 몇 가지 경우수가 가능한지 출력하는 문제입니다.
# 체스판은 8X8 형태이고 입력으로 나이트가 있을 위치를 지정해줍니다.
# 입력
# a1
# 출력
# 2


# 그러면 나이트의 이동제약이 없으려면 시작을 1,1로 보았을 때 3,3에서 3,6 부터는 무조건 8이다. 6,3에서 6,6 까지도 8
# [0] 이 3 ~ 6 이면서 [1]이 3 ~ 6 이면 8이다.
# 그 다음 겹은 꼭지점을 제외하고 6 꼭지점은 4
# 그 다음 겹은 꼭지점과 그 인접 둘을 제외하고 4 인접[1,2],[2,1],[1,7][2,8] 등 은 3 꼭지점[1,1],[8,8],[1,8],[8,1]은 2
# 이거면 차라리 하나하나 세는게 나을 듯ㅋㅋㅋ

input_str = str(sys.stdin.readline())

alpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']
for i in range(len(alpha)):
    if input_str[0] == alpha[i]:
        w = i + 1
h = int(input_str[1])
# 체스 판을 만들어 주었읍니다.
# 각 칸의 규칙 찾아넣으려니 매우 많은 시간이 들었읍니다...
# 상하좌우처럼 이동하는 방향 경우 모아준다.

directions = [[1,2], [-1,2], [1,-2], [-1,-2], [2,1], [2,-1], [-2,1], [-2,-1]] # 방향들을 전부 모아줍니다.
final_w = 0
final_h = 0
count = 0

for i in directions:
    final_w = w + i[1] # 각 리스트의 세로 움직임
    final_h = h + i[0] # 각 리스트의 가로 움직임
    if final_w >= 1 and final_w <= 8 and final_h >= 1 and final_h <= 8: # 체스판 밖으로 나가는 경우
        count += 1

print(count)