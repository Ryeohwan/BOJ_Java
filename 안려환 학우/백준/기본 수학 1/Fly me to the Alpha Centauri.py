import sys

T = int(sys.stdin.readline())

count = 0
move = 1 # 처음엔 -1 0 1 이니 1로 확정이기 때문이다.
final_move = 0

# 알아내야하는 것
# 이 문제에서의 규칙은 
# 두 수의 차이를 보았을 때 제곱수마다 새로운 숫자가 나타난다.
# 횟수는 (루트제곱수) * 2 - 1

# 두 수의 차이로 봤을 때 (제곱수 + 1) 부터 (제곱수 + 루트 제곱수)까지 횟수가 같고 
# [(루트 제곱수) * 2], 그 뒤부터 다음 제곱수 -1 까지 횟수가 같다.[(루트 제곱수) * 2 + 1]
# while 문을 돌려 두 수의 차이보다 작은 제곱수 중에서 가장 큰 값을 찾는다.

# 하나씩 보면 [4,5,6,7,8],[9,10,11,12,13,14,15] 이렇게 제곱수가 되는 애들 기준
# 이전 1,2,3은 규칙이 따로 필요 없어서 제외

# 4부터는 34455 9부터는 5666777 16부터는 788889999 이런 식으로 갈 것이다.
# 그래서 작동 횟수가 증가하는 구간은 
# 거리가 5일 때 횟수 4
# 7일 때 횟수 5
# 10일 때 횟수 6
# 13일 때 횟수 7
# 이 수들의 규칙을 보면 아님.
# 2 * 2 + 1 , 2 * 3 + 1, 3 * 3 + 1, 3 * 4 + 1, 4 * 4 + 1, 4 * 5 + 1
# 나 * 2 + 1, (나 + 1) * 2 + 1 이렇게 나아가는 것이다.
# 이걸 식으로 보면 N * M + 1 인데 이동횟수는 N + M 이다. 

# N의 값은 제곱수의 제곱근 (4의 제곱근 2, 9의 제곱근 3)
# M은 N과 같거나 1 큰 값


# https://zifmfmphantom.tistory.com/14
