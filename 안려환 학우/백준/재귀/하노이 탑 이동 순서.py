import sys

def hanoi(n,A,B,C): # A는 시작기둥, B는 보조기둥, C는 목표기둥
    if n == 1: # 이건 이제 마지막 하나 남았단 소리다. 마지막 원판은 A 바닥에 있는 가장 큰 원판이다.
        print(A,C) #그니까 목표기둥인 C가 있는 곳이 옮길 곳으로 설정이 되는 것이다.
    else: # A는 시작기둥인 것으로 A에서 C로만의 이동을 기록한다.
        hanoi(n - 1, A, C, B) # 원판이 하나 시작기둥에서 줄어들었고 모양이 가운데로 하나 이동
        print(A, C) # 이동했으니 이동한 것에 대한 출력을 해준다.
        hanoi(n - 1, B, A, C) # 이거 보면 보조기둥에 있는 것을 목표 기둥으로 옮겨준다.
                              # 미친 재귀를 이용하여 시작칸에 있는 원판은 계속 주는 방향으로 진행이 된다.
n = int(sys.stdin.readline()) # 이 n은 원판의 수이다.


print(2 ** n - 1) # 하노이탑의 이동 최소 횟수는 2 ** n - 1 이다.
hanoi(n,1,2,3) #이게 옮길 기둥을 골라줘야 하는 것이다. 1 3 이러면 1에 있는 것을 3으로

# 이게 3일 때 출력값인데 이를 해석해보면
# 1 3 처음 A C 가 출력된다. 이후 hanoi(n - 1, 1, 3, 2) 이상태로 1 3 출력 이후 
# hanoi(n - 1, 2, 1, 3) -> (1, 2, 3)으로 출력 이 로직들이 결과적 하노이탑 이동이 됨
# 1 2 
# 3 2
# 1 3
# 2 1
# 2 3
# 1 3
 

