import sys

A, B, V =map(int,sys.stdin.readline().split(" "))
#더하거나 빼는 순간에 V에 도달하게 되면 그 순간까지의 
#반복만큼 출력해야 한다.
#V - A 해서 도달하게 될 경우 아니면 그날 밤까지 가서 도달되는 경우
# 이 둘이 있는데 
# C = V - A
# V = C + B
#V의 크기관련해서 반복문돌리면 바로 런타임 에러
#관련 반복문 다 런타임 에러 발생
#결국 구글 검색 - 고민시간 : 1시간 23분 

#달팽이는 하루에 a - b 만큼을 이동한다.
# 하지만 목표지점에 도달했을 때는 거기서 멈춘다.
# V를 남은 나무막대기 높이라고 생각하자.
# 그러니까 V - A 한다음에 하루에 - A + B 세트이기 때문에
# 그 지점 기준 하루로 치면 V - B 가 되는 것이다. 
# 여기서 V는 V - A + B 를 해버리고 난 후의 V라서 그렇다.
# 그래서 A - B 는 하루가 된다.
# 그러니 (V - B) / (A - B)하게 되면 이게 며칠이 지난 날인지 따져보게 되는데
# 여기서 나머지가 있다면 하루 더 가야하는 것이기에 1을 더해줘야 한다.
# 나머지는 그냥 V - B한 날의 몫을 가져오게 되면 얼마나 걸렸나 알 수 있다.
# 여기서 중요하게 생각해야하는 것은 목표지점에 도달했을 때라는 것인데
# 결국 도달하려면 이 달팽이는 전진을 했기 때문에 도달할 수 있는 것이다.
# 미끄러지면서 도달하는 경우는? 만약 9만큼 가야하는데 오전에 5 전진하고 2 후퇴하면
# 5 3 8 6 11 9 하면서 미끄러지면서 경로에 도달하게 된다.
# 아 이게 아니라 이미 이 달팽이는 6에서 11을 가면서 이미 9에 도달하기에 멈춘다!
# 그렇기 때문에 절대 미끄러지면서 그 도착점을 처음 지날 일은 존재할 수 없다.

count = 0

if (V - B) % (A - B) != 0:
    count = ((V - B) // (A - B)) + 1
else:
    count = ((V - B) // (A - B))

print(count)

